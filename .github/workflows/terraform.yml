name: Terraform Workflow

on:
  pull_request:
  push:
    branches:
      - main  # Branch where terraform apply should run

env:
  TF_SA: ${{ secrets.GCP_SA_EMAIL }}
  TERRAFORM_VERSION: "1.5.0"
  TF_IN_AUTOMATION: "True"
  TARGET_ENV: "main"

jobs:
  terraform_plan:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.review.state != 'approved'

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Terraform Init, Upgrade and Validate
      run: |
        echo "Starting Terraform Init, Upgrade, and Validate"
        echo "Ref name: ${{ github.ref_name }}"
        echo "Target environment: $TARGET_ENV"
        
        if [ -d "${TARGET_ENV}/" ]; then
          for dir in ${TARGET_ENV}/*/; do
            if [ -d "$dir" ]; then
              cd $dir
              env=$(basename "$dir")
              
              echo "*************** TERRAFORM INIT, UPGRADE and VALIDATE in $dir ******************"
              terraform init -upgrade || exit 1
              terraform validate || exit 1
              
              cd - > /dev/null
            fi
          done
        else
          echo "Directory '${TARGET_ENV}' does not exist."
          exit 1
        fi

    - name: Terraform Plan
      id: plan
      shell: bash
      run: |
        echo "Starting Terraform Plan"
        echo "Target environment: $TARGET_ENV"
        
        if [ -d "${TARGET_ENV}/" ]; then
          for dir in ${TARGET_ENV}/*/; do
            if [ -d "$dir" ]; then
              cd $dir
              env=$(basename "$dir")
              
              echo "*************** TERRAFORM PLAN in $dir ******************"
              terraform plan -no-color -out=tfplan-${env}.out
              
              cd - > /dev/null
            fi
          done
        else
          echo "Directory '${TARGET_ENV}' does not exist."
          exit 1
        fi

    - name: Upload Terraform Plans and Configuration as Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: terraform-artifacts
        path: |
           main/**/*.out
           main/**/*.hcl
        include-hidden-files: true
        
  terraform_apply:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'  # Trigger on pushes to main branch

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Download Terraform Plans
      uses: dawidd6/action-download-artifact@v2
      with:
        name: terraform-artifacts
        path: main

    - name: List files in $TARGET_ENV directory
      run: |
        echo "Listing files in $TARGET_ENV directory:"
        ls -R $TARGET_ENV

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Terraform Apply
      shell: bash
      run: |
        echo "Applying Terraform Plan"
        if [ -d "${TARGET_ENV}/" ]; then
          for dir in ${TARGET_ENV}/*/; do
            if [ -d "$dir" ]; then
              cd $dir
              env=$(basename "$dir")
              
              # Check if the Terraform plan file exists
              if [ -f "tfplan-${env}.out" ]; then
                echo "*************** APPLYING PLAN in $dir ******************"
                terraform apply "tfplan-${env}.out" || exit 1
              else
                echo "Plan file tfplan-${env}.out not found in $dir"
              fi
              
              cd - > /dev/null
            fi
          done
        else
          echo "Directory '${TARGET_ENV}' does not exist."
          exit 1
        fi
